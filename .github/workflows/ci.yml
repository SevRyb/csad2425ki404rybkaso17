name: CI Qt CMake (Linux)

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Qt
      # Installs the Qt SDK
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.15.2'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake ${{github.workspace}}/client -B ${{github.workspace}}/client/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake ${{github.workspace}}/client --build ${{github.workspace}}/client/build


  # Job for building the PlatformIO server project
  # server-build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     # Step 1: Checkout the repository
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     # Step 2: Install PlatformIO
  #     - name: Install PlatformIO
  #       run: |
  #         python3 -m pip install -U platformio

  #     # Step 3: Build PlatformIO project
  #     - name: Build PlatformIO project
  #       run: pio run
  #       working-directory: server

  #     # Step 4: Upload PlatformIO build artifacts
  #     - name: Upload Server build artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: server-build
  #         path: server/.pio/build/*
