name: CI Qt CMake (Linux)

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  # Job for building the C++ Qt 5 client project on Linux
  client-build-linux:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Install dependencies (Qt5 and CMake)
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qtbase5-dev qtchooser qt5-qmake qtbase5-dev-tools build-essential cmake

      # Step 3: Create build directory
      - name: Create build directory
        run: |
          ls
          mkdir build
        working-directory: sw-client

      # Step 4: Configure project using CMake
      - name: Configure with CMake
        run: cmake -G "Unix Makefiles" ..
        working-directory: sw-client/build

      # Step 5: Build the project
      - name: Build client app
        run: cmake --build .
        working-directory: sw-client/build

      # Step 6: Package the application (optional - using linuxdeployqt)
      - name: Package with linuxdeployqt (optional)
        run: |
          wget -c https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
          chmod +x linuxdeployqt-continuous-x86_64.AppImage
          ./linuxdeployqt-continuous-x86_64.AppImage sw-client/build/sw-client -appimage
        shell: bash

      # Step 7: Upload client build artifacts
      - name: Upload Client build artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: client-build-linux
          path: sw-client/build/sw-client


  # Job for building the PlatformIO server project
  # server-build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     # Step 1: Checkout the repository
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     # Step 2: Install PlatformIO
  #     - name: Install PlatformIO
  #       run: |
  #         python3 -m pip install -U platformio

  #     # Step 3: Build PlatformIO project
  #     - name: Build PlatformIO project
  #       run: pio run
  #       working-directory: server

  #     # Step 4: Upload PlatformIO build artifacts
  #     - name: Upload Server build artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: server-build
  #         path: server/.pio/build/*
